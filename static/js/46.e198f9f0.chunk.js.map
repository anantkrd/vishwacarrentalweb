{"version":3,"sources":["component/Driver/BookingReport.jsx","../node_modules/react-bootstrap/esm/Table.js"],"names":["BookingReport","props","state","userId","item","error","isLoading","loadingColor","pageNo","payment_orderId","this","setState","localStorage","getItem","getBooking","object","prePayment","token","headers","urlData","fetch","process","response","json","dataRes","code","data","console","log","css","style","borderColor","color","loading","size","id","className","width","Title","fontSize","padding","backgroundColor","Body","striped","bordered","hover","responsive","map","i","variant","textAlign","to","pathname","orderId","userName","pickup","destination","undefined","pickupDate","Intl","DateTimeFormat","month","day","year","hour","minute","hour12","format","Date","returnDate","finalAmount","status","Component","withRouter","_excluded","Table","React","forwardRef","_ref","ref","bsPrefix","borderless","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass"],"mappings":"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","file":"static/js/46.e198f9f0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport { Button,Table } from 'react-bootstrap';\r\nimport Form from 'react-bootstrap/Form';\r\nimport  Header  from \"../Header\";\r\nimport  Footer  from \"../Footer\";\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from 'react-router-dom';\r\nclass BookingReport extends Component {\r\n    \r\n    state = {userId:'',item:[],error:'',isLoading:false,loadingColor:'#ffffff',pageNo:0,payment_orderId:''};\r\n    constructor(props) {\r\n        super(props);    \r\n        //console.log(\"++pickup**********===\"+JSON.stringify(this.props));    \r\n      }\r\n    \r\n      componentDidMount() {    \r\n          this.setState({isLoading:true});      \r\n       let userId=localStorage.getItem(\"userId\");\r\n       this.setState({userId:userId});     \r\n        //this.setState({item:this.props.match.params.data});\r\n        this.getBooking(userId);\r\n      }\r\n    \r\n      showPopup(object){\r\n        this.prePayment(object);\r\n      }\r\n      async getBooking(userId){\r\n        //const headers = { 'Content-Type': 'application/json' } \r\n        let token=localStorage.getItem(\"token\");\r\n        let pageNo=this.state.pageNo+1;\r\n        \r\n        const headers = {'Authorization':`Bearer ${token}`} ;\r\n          let urlData=\"&userId=\"+userId+\"&pageId=\"+pageNo;\r\n          const response = await fetch(process.env.REACT_APP_APIURL+'driver/get_payment_report?'+urlData, { headers });\r\n          \r\n          const dataRes = await response.json();\r\n          \r\n          \r\n          if(dataRes.code==200){\r\n              this.setState({item:dataRes.data});\r\n          }else{              console.log(\"errorr\")\r\n              this.setState({error:'some internal error please try later'})\r\n          }\r\n          \r\n          this.setState({isLoading:false});\r\n          //this.setState({cabsList:data.data});\r\n    }\r\n    \r\n    render() { \r\n        const override =`\r\n        display: block;\r\n        margin: 0 auto;\r\n        border-color: red;\r\n        position: absolute;\r\n        z-index: 9;\r\n        margin: 0px auto;\r\n        left: 40%;\r\n        `;\r\n        return (\r\n           \r\n            <div> \r\n                <Header/> \r\n                <div>\r\n                <ClipLoader css={override} style={{borderColor:'red'}} color={this.state.loadingColor} loading={this.state.isLoading}  size={150} >  </ClipLoader>\r\n                </div>\r\n                \r\n                \r\n                <div> \r\n                <section id=\"pricing\" className=\"pricing\">\r\n\r\n                    <div className=\"container\" data-aos=\"fade-up\" style={{width:'95%!important'}}>\r\n                        \r\n                        <div className=\"row\">                       \r\n                            <div className=\"col-lg-12 col-md-12\">\r\n                                    \r\n                                    <Card>\r\n                                            <Card.Title style={{fontSize:16,padding:10,color:'white',backgroundColor:'gray'}}>Booking History </Card.Title>\r\n                                        <Card.Body>\r\n                                            <div style={{color:'red'}}>\r\n                                            <Table striped bordered hover responsive>\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                    <th>BookingId</th>\r\n                                                    <th>Name </th>\r\n                                                    <th>Pickup</th>\r\n                                                    <th>Destination</th>\r\n                                                    <th>PickupDate</th>\r\n                                                    <th>ReturnDate</th>\r\n                                                    <th>Amount</th>\r\n                                                    <th>Status</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        this.state.item.map((object, i)=>{\r\n                                                            return<tr> \r\n                                                                <td><Link variant=\"success\" style={{padding: \"4px\",fontSize: 12, textAlign: \"center\"}} to={{ pathname: `/driver/trip-details/${object.orderId}`}} >{object.orderId}</Link></td>\r\n                                                                <td>{object.userName}</td>\r\n                                                                <td>{object.pickup}</td>\r\n                                                                <td>{object.destination}</td>\r\n                                                                <td>\r\n                                                                    {object.pickupDate!=undefined?new Intl.DateTimeFormat('en-GB', { \r\n                                                                        month: 'long', \r\n                                                                        day: '2-digit',\r\n                                                                        year: 'numeric', \r\n                                                                        hour:'numeric',\r\n                                                                        minute:'numeric',\r\n                                                                        hour12:true\r\n                                                                    }).format(new Date(object.pickupDate)):null\r\n                                                                    }\r\n                                                                 </td>\r\n                                                                <td>\r\n                                                                    {object.returnDate!=undefined?new Intl.DateTimeFormat('en-GB', { \r\n                                                                        month: 'long', \r\n                                                                        day: '2-digit',\r\n                                                                        year: 'numeric', \r\n                                                                        hour:'numeric',\r\n                                                                        minute:'numeric',\r\n                                                                        hour12:true\r\n                                                                    }).format(new Date(object.returnDate)):null\r\n                                                                    }\r\n                                                                </td>\r\n                                                                <td>{object.finalAmount}</td>\r\n                                                                <td>\r\n                                                                {object.status}\r\n                                                                </td>\r\n                                                            </tr>;\r\n                                                        })\r\n                                                    }\r\n                                                    \r\n                                                </tbody>    \r\n                                            </Table>\r\n                                            </div>\r\n                                            \r\n                                        </Card.Body>\r\n                                    </Card>                                   \r\n                            </div>             \r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                </section>\r\n                 \r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default withRouter(BookingReport);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;"],"sourceRoot":""}